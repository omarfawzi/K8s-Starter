name: Test on Kind

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test-on-kind:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Kind
      - name: Set up Kind cluster
        uses: helm/kind-action@v1
        with:
          version: "v0.20.0" # Specify Kind version

      # Step 3: Set up kubectl
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.27.0" # Specify Kubernetes version

      # Step 4: Install Helm
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.12.0" # Specify Helm version

      # Step 5: Apply Kubernetes manifests
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f kube-manifests/demo

      # Step 6: Wait for Pods to be ready
      - name: Wait for application to be ready
        run: |
          kubectl wait --for=condition=ready pod --all --timeout=120s

      # Step 7: Run integration tests
      - name: Run integration tests
        run: |
          kubectl get pods
          # Example: Replace the following line with your actual test command
          kubectl exec -it $(kubectl get pods -l app=my-app -o jsonpath="{.items[0].metadata.name}") -- curl -f http://localhost:8080/health || exit 1

      # Step 8: Gather logs for debugging (optional)
      - name: Gather application logs
        run: |
          kubectl logs -l app=my-app > app-logs.txt
          cat app-logs.txt

      # Step 9: Cleanup Kind cluster
      - name: Delete Kind cluster
        if: always()
        run: kind delete cluster
